require './lib/vehicle'
require './lib/passenger'
require './lib/park'

RSpec.describe Park do  

  it "exists and has attributes" do
    zion = Park.new("Zion", 25)
    expect(zion).to be_a(Park)
    expect(zion.name).to eq("Zion")
    expect(zion.admission_price).to eq(25)
  end

  it "starts with no vehicles" do
    zion = Park.new("Zion", 25)
    expect(zion.vehicles).to eq([])
  end

  it "can add vehicles" do
    zion = Park.new("Zion", 25)
    vehicle_1 = Vehicle.new("2001", "Honda", "Civic")
    zion.add_vehicle(vehicle_1)
    expect(zion.vehicles).to eq([vehicle_1])
  end

  it "can list how many passengers there are in each vehicle" do
    zion = Park.new("Zion", 25)
    vehicle_1 = Vehicle.new("2001", "Honda", "Civic")
    joel = Passenger.new({"name" => "Joel", "age" => 18})
    jordan = Passenger.new({"name" => "Jordan", "age" => 20})
    taylor = Passenger.new({"name" => "Taylor", "age" => 12})
    vehicle_1.add_passenger(joel)
    vehicle_1.add_passenger(jordan)
    vehicle_1.add_passenger(taylor)
    expect(vehicle_1.passengers).to eq([joel, jordan, taylor])
  end

  it "can calculate the revenue generated by the park" do
    zion = Park.new("Zion", 25)
    vehicle_1 = Vehicle.new("2001", "Honda", "Civic")
    joel = Passenger.new({"name" => "Joel", "age" => 18})
    jordan = Passenger.new({"name" => "Jordan", "age" => 20})
    taylor = Passenger.new({"name" => "Taylor", "age" => 12})
    vehicle_1.add_passenger(joel)
    vehicle_1.add_passenger(jordan)
    vehicle_1.add_passenger(taylor)
    expect(zion.revenue).to eq(50)
  end
end
